const Movie = require("../schemas/movies");

exports.getAllMovies = async (request, response) => {
  try {
    // .find() method gets all movies in the collection
    const movies = await Movie.find();
    response.send(movies);
  } catch (error) {
    response.status(500).send({ error: "Failed to fetch movies" });
  }
};

exports.createMovie = async (request, response) => {
  try {
    const movie = new Movie(request.body);
    await movie.save();
    response.send(movie);
  } catch (error) {
    response.status(500).send({ error: "Failed to add Movie" });
  }
};

exports.getMovie = async (request, response) => {
  try {
    const Movie = await Movie.findById(request.params.id);
    if (!Movie) {
      return response.status(404).send({ error: "Movie not found" });
    }
    response.send(Movie);
  } catch (error) {
    response.status(500).send({ error: "Failed to fetch Movie" });
  }
};

exports.updateMovie = async (request, response) => {
  try {
    const Movie = await Movie.findByIdAndUpdate(
      request.params.id,
      request.body,
      {
        new: true,
      }
    );
    response.send(Movie);
  } catch (error) {
    response.status(500).send({ error: "Failed to update Movie" });
  }
};

exports.deleteMovie = async (request, response) => {
  try {
    const movie = await Movie.findByIdAndDelete(request.params.id);
    if (!movie) {
      return response.status(404).send({ error: "Movie not found" });
    }
    response.send(movie); // send back deleted movie
  } catch (error) {
    response.status(500).send({ error: "Failed to delete Movie" });
  }
};
